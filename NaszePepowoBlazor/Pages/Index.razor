@using NaszePepowoBlazor.Models.Result
@using NaszePepowoBlazor.Shared.Components
@using NaszePepowoBlazor.Statics
@inject HttpClient httpClient
@inject ActivePage activePage
@page "/"

@if (activePage.IsEnabled(ActivePage.AppPage.Index))
{
    //Strona z aktualnościami
    <IndexComponent/>
}

@if (activePage.IsEnabled(ActivePage.AppPage.KGW))
{
    //Strona KGW
    <KgwComponent/>
}

@if (activePage.IsEnabled(ActivePage.AppPage.About))
{
    //Strona kontaktowa
    <AboutComponent/>
}

@if (activePage.IsEnabled(ActivePage.AppPage.Index) || activePage.IsEnabled(ActivePage.AppPage.KGW))
{
    //Element paginacji
    <PaginationComponent/>
}

@code {
    //MAKSYMALNA OBSŁUGIWANA LICZBA POSTÓW PRZEZ APLIKACJĘ TO 500!
    protected override async Task OnInitializedAsync()
    {
        //To jest akcja którą uruchamiamy w oczekiwaniu na załadowanie się strony - pobieramy 20 postów
        var resp = await httpClient.GetJsonAsync<PostListResult>("https://www.googleapis.com/blogger/v3/blogs/7027437029431274686/posts?key=AIzaSyACJeX9O_f6P38B1OSZRNrKyAAeOblb3q4&maxResults=20");
        activePage.Posts = resp.items;
        activePage.Synchronized = true;

        //Następnie dodajemy Event Listnera dla zmiany strony
        activePage.OnPageChangeEvent += SwitchPage;

        //Teraz asynchronicznie pobieramy resztę postów - chyba że ich nie ma
        Console.WriteLine($"Token następnej strony: {resp.nextPageToken}");
        if (!String.IsNullOrEmpty(resp.nextPageToken)) //W przeciwnym wypadku nie ma następnej strony
        {
            var respFull = await httpClient.GetJsonAsync<PostListResult>($"https://www.googleapis.com/blogger/v3/blogs/7027437029431274686/posts?key=AIzaSyACJeX9O_f6P38B1OSZRNrKyAAeOblb3q4&maxResults=500");
            activePage.Posts = respFull.items.Skip(20).ToList();
        }
    }

    public async void SwitchPage()
    {
        //Teraz zmieniamy aktywną stronę... czyli po prostu odświeżamy stan
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
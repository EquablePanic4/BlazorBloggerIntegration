@namespace NaszePepowoBlazor.Shared.Components
@using NaszePepowoBlazor.Statics
@using Models.Result
@inject ActivePage activePage

<div class="article-clean">
    <div class="container" id="index-container">
        @foreach (var post in posts.Skip(pageNumber * 10).Take(10))
        {
            <PostComponent AuthorName="@post.author.displayName" PostTitle="@post.title" PublishDate="@post.published">
                @((MarkupString)post.content)
            </PostComponent>
        }

        @if (posts.Count == 0 && !activePage.Synchronized)
        {
            <center><h6>Proszę czekać, trwa ładowanie postów...</h6></center>
        }

        @if (posts.Count == 0 && activePage.Synchronized)
        {
            <center><h3>Ta strona jeszcze nie posiada żadnych artykułów</h3></center>
        }
    </div>
</div>>

@code {
    private int pageNumber = 0;
    public bool SyncState { get; set; } = false;
    private List<PostResult> posts = new List<PostResult>();
    private List<PostResult> alerts = new List<PostResult>();

    protected override async Task OnInitializedAsync()
    {
        posts = activePage.CurrentPagePosts.Take(10).ToList();
        activePage.OnSyncStateEvent += OnNotify;
        activePage.OnPageNavigation += NavigateTo;
    }

    public async void OnNotify()
    {
        posts = activePage.IndexPosts.Take(10).ToList();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public async void NavigateTo(int pageNumber)
    {
        Console.WriteLine("Komponent index otrzymał delegata o przeniesieniu się na stronę: " + pageNumber);
        posts = activePage.IndexPosts.Skip(pageNumber * 10).Take(10).ToList();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}

@namespace NaszePepowoBlazor.Shared.Components
@using NaszePepowoBlazor.Statics
@using Models.Result
@inject ActivePage activePage

<div class="article-clean">
    <div class="container" id="index-container">
        @if (SyncState)
        {
            foreach (var post in activePage.Posts.Where(w => w.labels.Contains("kgw") || w.labels.Contains("*")).Skip(pageNumber * 10).Take(10).ToList())
            {
                <PostComponent AuthorName="@post.author.displayName" PostTitle="@post.title" PublishDate="@post.published">
                    @((MarkupString)post.content)
                </PostComponent>
            }
        }

        else
        {
            <center><h6>Proszę czekać, trwa ładowanie postów...</h6></center>
        }
    </div>
</div>

@code {
    public bool SyncState { get; set; } = false;
    private int pageNumber = 0;
    private IEnumerable<PostResult> posts = new List<PostResult>();

    protected override async Task OnInitializedAsync()
    {
        posts = activePage.CurrentPagePosts.Take(10);
        activePage.OnSyncStateEvent += OnNotify;
        activePage.OnPageNavigation += NavigateTo;
    }

    public async void OnNotify()
    {
        posts = activePage.Posts.Where(w => !w.labels?.Contains("kgw") ?? true).Skip(pageNumber * 10).Take(10).ToList();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public async void NavigateTo(int pageNumber)
    {
        Console.WriteLine("Komponent index otrzymał delegata o przeniesieniu się na stronę: " + pageNumber);
        posts = activePage.KgwPosts.Skip(pageNumber * 10).Take(10).ToList();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
